name: Build and Release Assets

on:
  push:
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:

  linux:
    runs-on: ubuntu-18.04
    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v2

    - name: Create environment and install dependencies
      run: |
        $CONDA/bin/conda env create --file environment.yml --name asciiviewer

    - name: Create binary
      run: |
        $CONDA/envs/asciiviewer/bin/pyinstaller --clean -y --dist ./dist/linux ./asciiviewer.spec

    - name: Zip binary
      run: |
        cd ./dist/linux
        zip asciiviewer-linux.zip asciiviewer

    - uses: actions/upload-artifact@v2
      with:
        name: asciiviewer-linux
        path: ./dist/linux/asciiviewer-linux.zip

  macos:
    runs-on: macos-10.15
    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v2

    - name: Create environment and install dependencies
      run: |
        sudo $CONDA/bin/conda env create --file environment.yml --name asciiviewer

    - name: Create macos app
      run: |
        $CONDA/envs/asciiviewer/bin/pyinstaller --clean -y --dist ./dist/macos ./asciiviewer.spec
        rm -rf ./dist/macos/asciiviewer

    - name: Zip binary
      run: |
        cd ./dist/macos
        zip -r asciiviewer-macos.zip .

    - uses: actions/upload-artifact@v2
      with:
        name: asciiviewer-macos
        path: ./dist/macos/asciiviewer-macos.zip

  windows:
    runs-on: windows-latest
    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v2

    - name: Create environment and install dependencies
      run: |
        %CONDA%\Scripts\conda.exe env create ^
        --file environment.yml --name asciiviewer
      shell: cmd

    - name: Create binary
      run: |
        %CONDA%\envs\asciiviewer\Scripts\pyinstaller.exe ^
        --clean -y --dist .\dist\windows .\asciiviewer.spec
      shell: cmd

    - name: Zip binary
      run: |
        cd .\dist\windows
        powershell Compress-Archive asciiviewer.exe asciiviewer-windows.zip

    - uses: actions/upload-artifact@v2
      with:
        name: asciiviewer-windows
        path: .\dist\windows\asciiviewer-windows.zip

  release:
    needs: [ linux, macos, windows ]
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: true

      - name: Get tag version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

      - uses: actions/download-artifact@v1
        with:
          name: asciiviewer-linux
        continue-on-error: true

      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./asciiviewer-linux/asciiviewer-linux.zip
          asset_name: asciiviewer-linux-${{ steps.get_version.outputs.VERSION }}.zip
          asset_content_type: application/zip
        continue-on-error: true

      - uses: actions/download-artifact@v1
        with:
          name: asciiviewer-macos
        continue-on-error: true

      - name: Upload MacOS Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./asciiviewer-macos/asciiviewer-macos.zip
          asset_name: asciiviewer-macos-${{ steps.get_version.outputs.VERSION }}.zip
          asset_content_type: application/zip
        continue-on-error: true

      - uses: actions/download-artifact@v1
        with:
          name: asciiviewer-windows
        continue-on-error: true

      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./asciiviewer-windows/asciiviewer-windows.zip
          asset_name: asciiviewer-windows-${{ steps.get_version.outputs.VERSION }}.zip
          asset_content_type: application/zip
        continue-on-error: true
